State 159 conflicts: 4 reduce/reduce
State 175 conflicts: 4 reduce/reduce
State 176 conflicts: 4 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: functions function
    3          | ε

    4 function: TASK FUNC_NAME ids '\n' stmtsGroup

    5 ids: ids id
    6    | id

    7 indexes: indexes ',' expr
    8        | expr

    9 stmtsGroup: '(' stmts ')'

   10 stmts: stmts stmt
   11      | stmt

   12 stmt: '\n'
   13     | id '=' expr '\n'
   14     | id '[' indexes ']' '=' expr '\n'
   15     | VAR id '=' value '\n'
   16     | VAR id '[' indexes ']' '=' value '\n'
   17     | FOR id BOUNDARY id STEP id stmtsGroup '\n'
   18     | FOR id BOUNDARY id STEP id stmt '\n'
   19     | SWITCH logic '\n' BOOL stmt '\n'
   20     | SWITCH logic '\n' BOOL stmt '\n' BOOL stmt '\n'
   21     | SWITCH logic '\n' BOOL stmt '\n' BOOL stmtsGroup
   22     | SWITCH logic '\n' BOOL stmtsGroup '\n'
   23     | SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL stmt '\n'
   24     | SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL stmtsGroup '\n'
   25     | ROTATE LEFT '\n'
   26     | ROTATE RIGHT '\n'
   27     | MOVE '\n'
   28     | DO FUNC_NAME parameters '\n'
   29     | PLEASE stmt '\n'
   30     | stmt THANKS '\n'
   31     | PRINT expr '\n'
   32     | RESULT id '\n'

   33 parameters: parameters id
   34           | parameters id '[' indexes ']'
   35           | id
   36           | id '[' indexes ']'

   37 value: INTEGER
   38      | BOOL

   39 expr: arith
   40     | logic

   41 arith: INTEGER
   42      | '(' arith ')'
   43      | id '[' indexes ']'
   44      | REDUCE id '[' INTEGER ']'
   45      | EXTEND id '[' INTEGER ']'
   46      | DIGITIZE id
   47      | SIZE id
   48      | arith '+' arith
   49      | arith '-' arith
   50      | arith '*' arith
   51      | arith '/' arith
   52      | GET ENVIRONMENT
   53      | GET FUNC_NAME

   54 logic: '(' logic ')'
   55      | logic AND logic
   56      | BOOL
   57      | id
   58      | id '[' indexes ']'
   59      | NOT logic
   60      | LOGITIZE id
   61      | MXEQ arith
   62      | MXLT arith
   63      | MXGT arith
   64      | MXLTE arith
   65      | MXGTE arith
   66      | ELEQ arith
   67      | ELLT arith
   68      | ELGT arith
   69      | ELLTE arith
   70      | ELGTE arith
   71      | MXFALSE logic
   72      | MXTRUE logic
   73      | REDUCE id '[' INTEGER ']'
   74      | EXTEND id '[' INTEGER ']'


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 4 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
    '(' (40) 9 42 54
    ')' (41) 9 42 54
    '*' (42) 50
    '+' (43) 48
    ',' (44) 7
    '-' (45) 49
    '/' (47) 51
    '=' (61) 13 14 15 16
    '[' (91) 14 16 34 36 43 44 45 58 73 74
    ']' (93) 14 16 34 36 43 44 45 58 73 74
    error (256)
    INTEGER <intVal> (258) 37 41 44 45 73 74
    BOOL <boolVal> (259) 19 20 21 22 23 24 38 56
    id <name> (260) 5 6 13 14 15 16 17 18 32 33 34 35 36 43 44 45 46 47 57 58 60 73 74
    FUNC_NAME <name> (261) 4 28 53
    SWITCH (262) 19 20 21 22 23 24
    FOR (263) 17 18
    PRINT (264) 31
    BOUNDARY (265) 17 18
    STEP (266) 17 18
    MOVE (267) 27
    ROTATE (268) 25 26
    LEFT (269) 25
    RIGHT (270) 26
    GET (271) 52 53
    ENVIRONMENT (272) 52
    TASK (273) 4
    RESULT (274) 32
    DO (275) 28
    PLEASE (276) 29
    VAR (277) 15 16
    PLSX (278)
    THANKS (279) 30
    SWITCHX (280)
    HIGHSWITCHX (281)
    AND (282) 55
    DIGITIZE (283) 46
    REDUCE (284) 44 73
    EXTEND (285) 45 74
    SIZE (286) 47
    NOT (287) 59
    LOGITIZE (288) 60
    MXEQ (289) 61
    MXLT (290) 62
    MXGT (291) 63
    MXLTE (292) 64
    MXGTE (293) 65
    ELEQ (294) 66
    ELLT (295) 67
    ELGT (296) 68
    ELLTE (297) 69
    ELGTE (298) 70
    MXFALSE (299) 71
    MXTRUE (300) 72


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    program (58)
        on left: 1
        on right: 0
    functions <nPtr> (59)
        on left: 2 3
        on right: 1 2
    function <nPtr> (60)
        on left: 4
        on right: 2
    ids <nPtr> (61)
        on left: 5 6
        on right: 4 5
    indexes <nPtr> (62)
        on left: 7 8
        on right: 7 14 16 34 36 43 58
    stmtsGroup <nPtr> (63)
        on left: 9
        on right: 4 17 21 22 23 24
    stmts <nPtr> (64)
        on left: 10 11
        on right: 9 10
    stmt <nPtr> (65)
        on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
        on right: 10 11 18 19 20 21 23 29 30
    parameters <nPtr> (66)
        on left: 33 34 35 36
        on right: 28 33 34
    value <nPtr> (67)
        on left: 37 38
        on right: 15 16
    expr <nPtr> (68)
        on left: 39 40
        on right: 7 8 13 14 31
    arith <nPtr> (69)
        on left: 41 42 43 44 45 46 47 48 49 50 51 52 53
        on right: 39 42 48 49 50 51 61 62 63 64 65 66 67 68 69 70
    logic <nPtr> (70)
        on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
        on right: 19 20 21 22 23 24 40 54 55 59 71 72


State 0

    0 $accept: • program $end

    $default  reduce using rule 3 (functions)

    program    go to state 1
    functions  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: functions •
    2 functions: functions • function

    TASK  shift, and go to state 4

    $default  reduce using rule 1 (program)

    function  go to state 5


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 function: TASK • FUNC_NAME ids '\n' stmtsGroup

    FUNC_NAME  shift, and go to state 6


State 5

    2 functions: functions function •

    $default  reduce using rule 2 (functions)


State 6

    4 function: TASK FUNC_NAME • ids '\n' stmtsGroup

    id  shift, and go to state 7

    ids  go to state 8


State 7

    6 ids: id •

    $default  reduce using rule 6 (ids)


State 8

    4 function: TASK FUNC_NAME ids • '\n' stmtsGroup
    5 ids: ids • id

    id    shift, and go to state 9
    '\n'  shift, and go to state 10


State 9

    5 ids: ids id •

    $default  reduce using rule 5 (ids)


State 10

    4 function: TASK FUNC_NAME ids '\n' • stmtsGroup

    '('  shift, and go to state 11

    stmtsGroup  go to state 12


State 11

    9 stmtsGroup: '(' • stmts ')'

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23

    stmts  go to state 24
    stmt   go to state 25


State 12

    4 function: TASK FUNC_NAME ids '\n' stmtsGroup •

    $default  reduce using rule 4 (function)


State 13

   13 stmt: id • '=' expr '\n'
   14     | id • '[' indexes ']' '=' expr '\n'

    '='  shift, and go to state 26
    '['  shift, and go to state 27


State 14

   19 stmt: SWITCH • logic '\n' BOOL stmt '\n'
   20     | SWITCH • logic '\n' BOOL stmt '\n' BOOL stmt '\n'
   21     | SWITCH • logic '\n' BOOL stmt '\n' BOOL stmtsGroup
   22     | SWITCH • logic '\n' BOOL stmtsGroup '\n'
   23     | SWITCH • logic '\n' BOOL stmtsGroup '\n' BOOL stmt '\n'
   24     | SWITCH • logic '\n' BOOL stmtsGroup '\n' BOOL stmtsGroup '\n'

    BOOL      shift, and go to state 28
    id        shift, and go to state 29
    REDUCE    shift, and go to state 30
    EXTEND    shift, and go to state 31
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 46

    logic  go to state 47


State 15

   17 stmt: FOR • id BOUNDARY id STEP id stmtsGroup '\n'
   18     | FOR • id BOUNDARY id STEP id stmt '\n'

    id  shift, and go to state 48


State 16

   31 stmt: PRINT • expr '\n'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    expr   go to state 57
    arith  go to state 58
    logic  go to state 59


State 17

   27 stmt: MOVE • '\n'

    '\n'  shift, and go to state 60


State 18

   25 stmt: ROTATE • LEFT '\n'
   26     | ROTATE • RIGHT '\n'

    LEFT   shift, and go to state 61
    RIGHT  shift, and go to state 62


State 19

   32 stmt: RESULT • id '\n'

    id  shift, and go to state 63


State 20

   28 stmt: DO • FUNC_NAME parameters '\n'

    FUNC_NAME  shift, and go to state 64


State 21

   29 stmt: PLEASE • stmt '\n'

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23

    stmt  go to state 65


State 22

   15 stmt: VAR • id '=' value '\n'
   16     | VAR • id '[' indexes ']' '=' value '\n'

    id  shift, and go to state 66


State 23

   12 stmt: '\n' •

    $default  reduce using rule 12 (stmt)


State 24

    9 stmtsGroup: '(' stmts • ')'
   10 stmts: stmts • stmt

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23
    ')'     shift, and go to state 67

    stmt  go to state 68


State 25

   11 stmts: stmt •
   30 stmt: stmt • THANKS '\n'

    THANKS  shift, and go to state 69

    $default  reduce using rule 11 (stmts)


State 26

   13 stmt: id '=' • expr '\n'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    expr   go to state 70
    arith  go to state 58
    logic  go to state 59


State 27

   14 stmt: id '[' • indexes ']' '=' expr '\n'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    indexes  go to state 71
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 28

   56 logic: BOOL •

    $default  reduce using rule 56 (logic)


State 29

   57 logic: id •
   58      | id • '[' indexes ']'

    '['  shift, and go to state 73

    $default  reduce using rule 57 (logic)


State 30

   73 logic: REDUCE • id '[' INTEGER ']'

    id  shift, and go to state 74


State 31

   74 logic: EXTEND • id '[' INTEGER ']'

    id  shift, and go to state 75


State 32

   59 logic: NOT • logic

    BOOL      shift, and go to state 28
    id        shift, and go to state 29
    REDUCE    shift, and go to state 30
    EXTEND    shift, and go to state 31
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 46

    logic  go to state 76


State 33

   60 logic: LOGITIZE • id

    id  shift, and go to state 77


State 34

   61 logic: MXEQ • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 82


State 35

   62 logic: MXLT • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 83


State 36

   63 logic: MXGT • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 84


State 37

   64 logic: MXLTE • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 85


State 38

   65 logic: MXGTE • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 86


State 39

   66 logic: ELEQ • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 87


State 40

   67 logic: ELLT • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 88


State 41

   68 logic: ELGT • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 89


State 42

   69 logic: ELLTE • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 90


State 43

   70 logic: ELGTE • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 91


State 44

   71 logic: MXFALSE • logic

    BOOL      shift, and go to state 28
    id        shift, and go to state 29
    REDUCE    shift, and go to state 30
    EXTEND    shift, and go to state 31
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 46

    logic  go to state 92


State 45

   72 logic: MXTRUE • logic

    BOOL      shift, and go to state 28
    id        shift, and go to state 29
    REDUCE    shift, and go to state 30
    EXTEND    shift, and go to state 31
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 46

    logic  go to state 93


State 46

   54 logic: '(' • logic ')'

    BOOL      shift, and go to state 28
    id        shift, and go to state 29
    REDUCE    shift, and go to state 30
    EXTEND    shift, and go to state 31
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 46

    logic  go to state 94


State 47

   19 stmt: SWITCH logic • '\n' BOOL stmt '\n'
   20     | SWITCH logic • '\n' BOOL stmt '\n' BOOL stmt '\n'
   21     | SWITCH logic • '\n' BOOL stmt '\n' BOOL stmtsGroup
   22     | SWITCH logic • '\n' BOOL stmtsGroup '\n'
   23     | SWITCH logic • '\n' BOOL stmtsGroup '\n' BOOL stmt '\n'
   24     | SWITCH logic • '\n' BOOL stmtsGroup '\n' BOOL stmtsGroup '\n'
   55 logic: logic • AND logic

    AND   shift, and go to state 95
    '\n'  shift, and go to state 96


State 48

   17 stmt: FOR id • BOUNDARY id STEP id stmtsGroup '\n'
   18     | FOR id • BOUNDARY id STEP id stmt '\n'

    BOUNDARY  shift, and go to state 97


State 49

   41 arith: INTEGER •

    $default  reduce using rule 41 (arith)


State 50

   43 arith: id • '[' indexes ']'
   57 logic: id •
   58      | id • '[' indexes ']'

    '['  shift, and go to state 98

    $default  reduce using rule 57 (logic)


State 51

   52 arith: GET • ENVIRONMENT
   53      | GET • FUNC_NAME

    FUNC_NAME    shift, and go to state 99
    ENVIRONMENT  shift, and go to state 100


State 52

   46 arith: DIGITIZE • id

    id  shift, and go to state 101


State 53

   44 arith: REDUCE • id '[' INTEGER ']'
   73 logic: REDUCE • id '[' INTEGER ']'

    id  shift, and go to state 102


State 54

   45 arith: EXTEND • id '[' INTEGER ']'
   74 logic: EXTEND • id '[' INTEGER ']'

    id  shift, and go to state 103


State 55

   47 arith: SIZE • id

    id  shift, and go to state 104


State 56

   42 arith: '(' • arith ')'
   54 logic: '(' • logic ')'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    arith  go to state 105
    logic  go to state 94


State 57

   31 stmt: PRINT expr • '\n'

    '\n'  shift, and go to state 106


State 58

   39 expr: arith •
   48 arith: arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 39 (expr)


State 59

   40 expr: logic •
   55 logic: logic • AND logic

    AND  shift, and go to state 95

    $default  reduce using rule 40 (expr)


State 60

   27 stmt: MOVE '\n' •

    $default  reduce using rule 27 (stmt)


State 61

   25 stmt: ROTATE LEFT • '\n'

    '\n'  shift, and go to state 111


State 62

   26 stmt: ROTATE RIGHT • '\n'

    '\n'  shift, and go to state 112


State 63

   32 stmt: RESULT id • '\n'

    '\n'  shift, and go to state 113


State 64

   28 stmt: DO FUNC_NAME • parameters '\n'

    id  shift, and go to state 114

    parameters  go to state 115


State 65

   29 stmt: PLEASE stmt • '\n'
   30     | stmt • THANKS '\n'

    THANKS  shift, and go to state 69
    '\n'    shift, and go to state 116


State 66

   15 stmt: VAR id • '=' value '\n'
   16     | VAR id • '[' indexes ']' '=' value '\n'

    '='  shift, and go to state 117
    '['  shift, and go to state 118


State 67

    9 stmtsGroup: '(' stmts ')' •

    $default  reduce using rule 9 (stmtsGroup)


State 68

   10 stmts: stmts stmt •
   30 stmt: stmt • THANKS '\n'

    THANKS  shift, and go to state 69

    $default  reduce using rule 10 (stmts)


State 69

   30 stmt: stmt THANKS • '\n'

    '\n'  shift, and go to state 119


State 70

   13 stmt: id '=' expr • '\n'

    '\n'  shift, and go to state 120


State 71

    7 indexes: indexes • ',' expr
   14 stmt: id '[' indexes • ']' '=' expr '\n'

    ','  shift, and go to state 121
    ']'  shift, and go to state 122


State 72

    8 indexes: expr •

    $default  reduce using rule 8 (indexes)


State 73

   58 logic: id '[' • indexes ']'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    indexes  go to state 123
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 74

   73 logic: REDUCE id • '[' INTEGER ']'

    '['  shift, and go to state 124


State 75

   74 logic: EXTEND id • '[' INTEGER ']'

    '['  shift, and go to state 125


State 76

   55 logic: logic • AND logic
   59      | NOT logic •

    $default  reduce using rule 59 (logic)


State 77

   60 logic: LOGITIZE id •

    $default  reduce using rule 60 (logic)


State 78

   43 arith: id • '[' indexes ']'

    '['  shift, and go to state 126


State 79

   44 arith: REDUCE • id '[' INTEGER ']'

    id  shift, and go to state 127


State 80

   45 arith: EXTEND • id '[' INTEGER ']'

    id  shift, and go to state 128


State 81

   42 arith: '(' • arith ')'

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 105


State 82

   48 arith: arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith
   61 logic: MXEQ arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 61 (logic)


State 83

   48 arith: arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith
   62 logic: MXLT arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 62 (logic)


State 84

   48 arith: arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith
   63 logic: MXGT arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 63 (logic)


State 85

   48 arith: arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith
   64 logic: MXLTE arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 64 (logic)


State 86

   48 arith: arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith
   65 logic: MXGTE arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 65 (logic)


State 87

   48 arith: arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith
   66 logic: ELEQ arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 66 (logic)


State 88

   48 arith: arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith
   67 logic: ELLT arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 67 (logic)


State 89

   48 arith: arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith
   68 logic: ELGT arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 68 (logic)


State 90

   48 arith: arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith
   69 logic: ELLTE arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 69 (logic)


State 91

   48 arith: arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith
   70 logic: ELGTE arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 70 (logic)


State 92

   55 logic: logic • AND logic
   71      | MXFALSE logic •

    $default  reduce using rule 71 (logic)


State 93

   55 logic: logic • AND logic
   72      | MXTRUE logic •

    $default  reduce using rule 72 (logic)


State 94

   54 logic: '(' logic • ')'
   55      | logic • AND logic

    AND  shift, and go to state 95
    ')'  shift, and go to state 129


State 95

   55 logic: logic AND • logic

    BOOL      shift, and go to state 28
    id        shift, and go to state 29
    REDUCE    shift, and go to state 30
    EXTEND    shift, and go to state 31
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 46

    logic  go to state 130


State 96

   19 stmt: SWITCH logic '\n' • BOOL stmt '\n'
   20     | SWITCH logic '\n' • BOOL stmt '\n' BOOL stmt '\n'
   21     | SWITCH logic '\n' • BOOL stmt '\n' BOOL stmtsGroup
   22     | SWITCH logic '\n' • BOOL stmtsGroup '\n'
   23     | SWITCH logic '\n' • BOOL stmtsGroup '\n' BOOL stmt '\n'
   24     | SWITCH logic '\n' • BOOL stmtsGroup '\n' BOOL stmtsGroup '\n'

    BOOL  shift, and go to state 131


State 97

   17 stmt: FOR id BOUNDARY • id STEP id stmtsGroup '\n'
   18     | FOR id BOUNDARY • id STEP id stmt '\n'

    id  shift, and go to state 132


State 98

   43 arith: id '[' • indexes ']'
   58 logic: id '[' • indexes ']'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    indexes  go to state 133
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 99

   53 arith: GET FUNC_NAME •

    $default  reduce using rule 53 (arith)


State 100

   52 arith: GET ENVIRONMENT •

    $default  reduce using rule 52 (arith)


State 101

   46 arith: DIGITIZE id •

    $default  reduce using rule 46 (arith)


State 102

   44 arith: REDUCE id • '[' INTEGER ']'
   73 logic: REDUCE id • '[' INTEGER ']'

    '['  shift, and go to state 134


State 103

   45 arith: EXTEND id • '[' INTEGER ']'
   74 logic: EXTEND id • '[' INTEGER ']'

    '['  shift, and go to state 135


State 104

   47 arith: SIZE id •

    $default  reduce using rule 47 (arith)


State 105

   42 arith: '(' arith • ')'
   48      | arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    ')'  shift, and go to state 136


State 106

   31 stmt: PRINT expr '\n' •

    $default  reduce using rule 31 (stmt)


State 107

   48 arith: arith '+' • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 137


State 108

   49 arith: arith '-' • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 138


State 109

   50 arith: arith '*' • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 139


State 110

   51 arith: arith '/' • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 140


State 111

   25 stmt: ROTATE LEFT '\n' •

    $default  reduce using rule 25 (stmt)


State 112

   26 stmt: ROTATE RIGHT '\n' •

    $default  reduce using rule 26 (stmt)


State 113

   32 stmt: RESULT id '\n' •

    $default  reduce using rule 32 (stmt)


State 114

   35 parameters: id •
   36           | id • '[' indexes ']'

    '['  shift, and go to state 141

    $default  reduce using rule 35 (parameters)


State 115

   28 stmt: DO FUNC_NAME parameters • '\n'
   33 parameters: parameters • id
   34           | parameters • id '[' indexes ']'

    id    shift, and go to state 142
    '\n'  shift, and go to state 143


State 116

   29 stmt: PLEASE stmt '\n' •

    $default  reduce using rule 29 (stmt)


State 117

   15 stmt: VAR id '=' • value '\n'

    INTEGER  shift, and go to state 144
    BOOL     shift, and go to state 145

    value  go to state 146


State 118

   16 stmt: VAR id '[' • indexes ']' '=' value '\n'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    indexes  go to state 147
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 119

   30 stmt: stmt THANKS '\n' •

    $default  reduce using rule 30 (stmt)


State 120

   13 stmt: id '=' expr '\n' •

    $default  reduce using rule 13 (stmt)


State 121

    7 indexes: indexes ',' • expr

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    expr   go to state 148
    arith  go to state 58
    logic  go to state 59


State 122

   14 stmt: id '[' indexes ']' • '=' expr '\n'

    '='  shift, and go to state 149


State 123

    7 indexes: indexes • ',' expr
   58 logic: id '[' indexes • ']'

    ','  shift, and go to state 121
    ']'  shift, and go to state 150


State 124

   73 logic: REDUCE id '[' • INTEGER ']'

    INTEGER  shift, and go to state 151


State 125

   74 logic: EXTEND id '[' • INTEGER ']'

    INTEGER  shift, and go to state 152


State 126

   43 arith: id '[' • indexes ']'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    indexes  go to state 153
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 127

   44 arith: REDUCE id • '[' INTEGER ']'

    '['  shift, and go to state 154


State 128

   45 arith: EXTEND id • '[' INTEGER ']'

    '['  shift, and go to state 155


State 129

   54 logic: '(' logic ')' •

    $default  reduce using rule 54 (logic)


State 130

   55 logic: logic • AND logic
   55      | logic AND logic •

    $default  reduce using rule 55 (logic)


State 131

   19 stmt: SWITCH logic '\n' BOOL • stmt '\n'
   20     | SWITCH logic '\n' BOOL • stmt '\n' BOOL stmt '\n'
   21     | SWITCH logic '\n' BOOL • stmt '\n' BOOL stmtsGroup
   22     | SWITCH logic '\n' BOOL • stmtsGroup '\n'
   23     | SWITCH logic '\n' BOOL • stmtsGroup '\n' BOOL stmt '\n'
   24     | SWITCH logic '\n' BOOL • stmtsGroup '\n' BOOL stmtsGroup '\n'

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23
    '('     shift, and go to state 11

    stmtsGroup  go to state 156
    stmt        go to state 157


State 132

   17 stmt: FOR id BOUNDARY id • STEP id stmtsGroup '\n'
   18     | FOR id BOUNDARY id • STEP id stmt '\n'

    STEP  shift, and go to state 158


State 133

    7 indexes: indexes • ',' expr
   43 arith: id '[' indexes • ']'
   58 logic: id '[' indexes • ']'

    ','  shift, and go to state 121
    ']'  shift, and go to state 159


State 134

   44 arith: REDUCE id '[' • INTEGER ']'
   73 logic: REDUCE id '[' • INTEGER ']'

    INTEGER  shift, and go to state 160


State 135

   45 arith: EXTEND id '[' • INTEGER ']'
   74 logic: EXTEND id '[' • INTEGER ']'

    INTEGER  shift, and go to state 161


State 136

   42 arith: '(' arith ')' •

    $default  reduce using rule 42 (arith)


State 137

   48 arith: arith • '+' arith
   48      | arith '+' arith •
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith

    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 48 (arith)


State 138

   48 arith: arith • '+' arith
   49      | arith • '-' arith
   49      | arith '-' arith •
   50      | arith • '*' arith
   51      | arith • '/' arith

    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 49 (arith)


State 139

   48 arith: arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   50      | arith '*' arith •
   51      | arith • '/' arith

    $default  reduce using rule 50 (arith)


State 140

   48 arith: arith • '+' arith
   49      | arith • '-' arith
   50      | arith • '*' arith
   51      | arith • '/' arith
   51      | arith '/' arith •

    $default  reduce using rule 51 (arith)


State 141

   36 parameters: id '[' • indexes ']'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    indexes  go to state 162
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 142

   33 parameters: parameters id •
   34           | parameters id • '[' indexes ']'

    '['  shift, and go to state 163

    $default  reduce using rule 33 (parameters)


State 143

   28 stmt: DO FUNC_NAME parameters '\n' •

    $default  reduce using rule 28 (stmt)


State 144

   37 value: INTEGER •

    $default  reduce using rule 37 (value)


State 145

   38 value: BOOL •

    $default  reduce using rule 38 (value)


State 146

   15 stmt: VAR id '=' value • '\n'

    '\n'  shift, and go to state 164


State 147

    7 indexes: indexes • ',' expr
   16 stmt: VAR id '[' indexes • ']' '=' value '\n'

    ','  shift, and go to state 121
    ']'  shift, and go to state 165


State 148

    7 indexes: indexes ',' expr •

    $default  reduce using rule 7 (indexes)


State 149

   14 stmt: id '[' indexes ']' '=' • expr '\n'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    expr   go to state 166
    arith  go to state 58
    logic  go to state 59


State 150

   58 logic: id '[' indexes ']' •

    $default  reduce using rule 58 (logic)


State 151

   73 logic: REDUCE id '[' INTEGER • ']'

    ']'  shift, and go to state 167


State 152

   74 logic: EXTEND id '[' INTEGER • ']'

    ']'  shift, and go to state 168


State 153

    7 indexes: indexes • ',' expr
   43 arith: id '[' indexes • ']'

    ','  shift, and go to state 121
    ']'  shift, and go to state 169


State 154

   44 arith: REDUCE id '[' • INTEGER ']'

    INTEGER  shift, and go to state 170


State 155

   45 arith: EXTEND id '[' • INTEGER ']'

    INTEGER  shift, and go to state 171


State 156

   22 stmt: SWITCH logic '\n' BOOL stmtsGroup • '\n'
   23     | SWITCH logic '\n' BOOL stmtsGroup • '\n' BOOL stmt '\n'
   24     | SWITCH logic '\n' BOOL stmtsGroup • '\n' BOOL stmtsGroup '\n'

    '\n'  shift, and go to state 172


State 157

   19 stmt: SWITCH logic '\n' BOOL stmt • '\n'
   20     | SWITCH logic '\n' BOOL stmt • '\n' BOOL stmt '\n'
   21     | SWITCH logic '\n' BOOL stmt • '\n' BOOL stmtsGroup
   30     | stmt • THANKS '\n'

    THANKS  shift, and go to state 69
    '\n'    shift, and go to state 173


State 158

   17 stmt: FOR id BOUNDARY id STEP • id stmtsGroup '\n'
   18     | FOR id BOUNDARY id STEP • id stmt '\n'

    id  shift, and go to state 174


State 159

   43 arith: id '[' indexes ']' •
   58 logic: id '[' indexes ']' •

    AND       reduce using rule 58 (logic)
    '\n'      reduce using rule 43 (arith)
    '\n'      [reduce using rule 58 (logic)]
    ','       reduce using rule 43 (arith)
    ','       [reduce using rule 58 (logic)]
    ')'       reduce using rule 43 (arith)
    ')'       [reduce using rule 58 (logic)]
    ']'       reduce using rule 43 (arith)
    ']'       [reduce using rule 58 (logic)]
    $default  reduce using rule 43 (arith)

    reduce/reduce conflict on tokens '\n', ',', ')', ']':
       43 arith: id '[' indexes ']' •
       58 logic: id '[' indexes ']' •
      Example: id '[' indexes ']' •
      First reduce derivation
        expr
        ↳ 39: arith
              ↳ 43: id '[' indexes ']' •
      Second reduce derivation
        expr
        ↳ 40: logic
              ↳ 58: id '[' indexes ']' •



State 160

   44 arith: REDUCE id '[' INTEGER • ']'
   73 logic: REDUCE id '[' INTEGER • ']'

    ']'  shift, and go to state 175


State 161

   45 arith: EXTEND id '[' INTEGER • ']'
   74 logic: EXTEND id '[' INTEGER • ']'

    ']'  shift, and go to state 176


State 162

    7 indexes: indexes • ',' expr
   36 parameters: id '[' indexes • ']'

    ','  shift, and go to state 121
    ']'  shift, and go to state 177


State 163

   34 parameters: parameters id '[' • indexes ']'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    indexes  go to state 178
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 164

   15 stmt: VAR id '=' value '\n' •

    $default  reduce using rule 15 (stmt)


State 165

   16 stmt: VAR id '[' indexes ']' • '=' value '\n'

    '='  shift, and go to state 179


State 166

   14 stmt: id '[' indexes ']' '=' expr • '\n'

    '\n'  shift, and go to state 180


State 167

   73 logic: REDUCE id '[' INTEGER ']' •

    $default  reduce using rule 73 (logic)


State 168

   74 logic: EXTEND id '[' INTEGER ']' •

    $default  reduce using rule 74 (logic)


State 169

   43 arith: id '[' indexes ']' •

    $default  reduce using rule 43 (arith)


State 170

   44 arith: REDUCE id '[' INTEGER • ']'

    ']'  shift, and go to state 181


State 171

   45 arith: EXTEND id '[' INTEGER • ']'

    ']'  shift, and go to state 182


State 172

   22 stmt: SWITCH logic '\n' BOOL stmtsGroup '\n' •
   23     | SWITCH logic '\n' BOOL stmtsGroup '\n' • BOOL stmt '\n'
   24     | SWITCH logic '\n' BOOL stmtsGroup '\n' • BOOL stmtsGroup '\n'

    BOOL  shift, and go to state 183

    $default  reduce using rule 22 (stmt)


State 173

   19 stmt: SWITCH logic '\n' BOOL stmt '\n' •
   20     | SWITCH logic '\n' BOOL stmt '\n' • BOOL stmt '\n'
   21     | SWITCH logic '\n' BOOL stmt '\n' • BOOL stmtsGroup

    BOOL  shift, and go to state 184

    $default  reduce using rule 19 (stmt)


State 174

   17 stmt: FOR id BOUNDARY id STEP id • stmtsGroup '\n'
   18     | FOR id BOUNDARY id STEP id • stmt '\n'

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23
    '('     shift, and go to state 11

    stmtsGroup  go to state 185
    stmt        go to state 186


State 175

   44 arith: REDUCE id '[' INTEGER ']' •
   73 logic: REDUCE id '[' INTEGER ']' •

    AND       reduce using rule 73 (logic)
    '\n'      reduce using rule 44 (arith)
    '\n'      [reduce using rule 73 (logic)]
    ','       reduce using rule 44 (arith)
    ','       [reduce using rule 73 (logic)]
    ')'       reduce using rule 44 (arith)
    ')'       [reduce using rule 73 (logic)]
    ']'       reduce using rule 44 (arith)
    ']'       [reduce using rule 73 (logic)]
    $default  reduce using rule 44 (arith)

    reduce/reduce conflict on tokens '\n', ',', ')', ']':
       44 arith: REDUCE id '[' INTEGER ']' •
       73 logic: REDUCE id '[' INTEGER ']' •
      Example: REDUCE id '[' INTEGER ']' •
      First reduce derivation
        expr
        ↳ 39: arith
              ↳ 44: REDUCE id '[' INTEGER ']' •
      Second reduce derivation
        expr
        ↳ 40: logic
              ↳ 73: REDUCE id '[' INTEGER ']' •



State 176

   45 arith: EXTEND id '[' INTEGER ']' •
   74 logic: EXTEND id '[' INTEGER ']' •

    AND       reduce using rule 74 (logic)
    '\n'      reduce using rule 45 (arith)
    '\n'      [reduce using rule 74 (logic)]
    ','       reduce using rule 45 (arith)
    ','       [reduce using rule 74 (logic)]
    ')'       reduce using rule 45 (arith)
    ')'       [reduce using rule 74 (logic)]
    ']'       reduce using rule 45 (arith)
    ']'       [reduce using rule 74 (logic)]
    $default  reduce using rule 45 (arith)

    reduce/reduce conflict on tokens '\n', ',', ')', ']':
       45 arith: EXTEND id '[' INTEGER ']' •
       74 logic: EXTEND id '[' INTEGER ']' •
      Example: EXTEND id '[' INTEGER ']' •
      First reduce derivation
        expr
        ↳ 39: arith
              ↳ 45: EXTEND id '[' INTEGER ']' •
      Second reduce derivation
        expr
        ↳ 40: logic
              ↳ 74: EXTEND id '[' INTEGER ']' •



State 177

   36 parameters: id '[' indexes ']' •

    $default  reduce using rule 36 (parameters)


State 178

    7 indexes: indexes • ',' expr
   34 parameters: parameters id '[' indexes • ']'

    ','  shift, and go to state 121
    ']'  shift, and go to state 187


State 179

   16 stmt: VAR id '[' indexes ']' '=' • value '\n'

    INTEGER  shift, and go to state 144
    BOOL     shift, and go to state 145

    value  go to state 188


State 180

   14 stmt: id '[' indexes ']' '=' expr '\n' •

    $default  reduce using rule 14 (stmt)


State 181

   44 arith: REDUCE id '[' INTEGER ']' •

    $default  reduce using rule 44 (arith)


State 182

   45 arith: EXTEND id '[' INTEGER ']' •

    $default  reduce using rule 45 (arith)


State 183

   23 stmt: SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL • stmt '\n'
   24     | SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL • stmtsGroup '\n'

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23
    '('     shift, and go to state 11

    stmtsGroup  go to state 189
    stmt        go to state 190


State 184

   20 stmt: SWITCH logic '\n' BOOL stmt '\n' BOOL • stmt '\n'
   21     | SWITCH logic '\n' BOOL stmt '\n' BOOL • stmtsGroup

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23
    '('     shift, and go to state 11

    stmtsGroup  go to state 191
    stmt        go to state 192


State 185

   17 stmt: FOR id BOUNDARY id STEP id stmtsGroup • '\n'

    '\n'  shift, and go to state 193


State 186

   18 stmt: FOR id BOUNDARY id STEP id stmt • '\n'
   30     | stmt • THANKS '\n'

    THANKS  shift, and go to state 69
    '\n'    shift, and go to state 194


State 187

   34 parameters: parameters id '[' indexes ']' •

    $default  reduce using rule 34 (parameters)


State 188

   16 stmt: VAR id '[' indexes ']' '=' value • '\n'

    '\n'  shift, and go to state 195


State 189

   24 stmt: SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL stmtsGroup • '\n'

    '\n'  shift, and go to state 196


State 190

   23 stmt: SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL stmt • '\n'
   30     | stmt • THANKS '\n'

    THANKS  shift, and go to state 69
    '\n'    shift, and go to state 197


State 191

   21 stmt: SWITCH logic '\n' BOOL stmt '\n' BOOL stmtsGroup •

    $default  reduce using rule 21 (stmt)


State 192

   20 stmt: SWITCH logic '\n' BOOL stmt '\n' BOOL stmt • '\n'
   30     | stmt • THANKS '\n'

    THANKS  shift, and go to state 69
    '\n'    shift, and go to state 198


State 193

   17 stmt: FOR id BOUNDARY id STEP id stmtsGroup '\n' •

    $default  reduce using rule 17 (stmt)


State 194

   18 stmt: FOR id BOUNDARY id STEP id stmt '\n' •

    $default  reduce using rule 18 (stmt)


State 195

   16 stmt: VAR id '[' indexes ']' '=' value '\n' •

    $default  reduce using rule 16 (stmt)


State 196

   24 stmt: SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL stmtsGroup '\n' •

    $default  reduce using rule 24 (stmt)


State 197

   23 stmt: SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL stmt '\n' •

    $default  reduce using rule 23 (stmt)


State 198

   20 stmt: SWITCH logic '\n' BOOL stmt '\n' BOOL stmt '\n' •

    $default  reduce using rule 20 (stmt)
