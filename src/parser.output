Nonterminals useless in grammar

    value


Terminals unused in grammar

    END


Rules useless in grammar

   76 value: INTEGER
   77      | BOOL


State 158 conflicts: 4 reduce/reduce
State 175 conflicts: 4 reduce/reduce
State 176 conflicts: 4 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: functions function
    3          | ε

    4 function: TASK id ids '\n' stmtsGroup

    5 ids: ids id
    6    | id

    7 indexes: indexes ',' expr
    8        | expr
    9        | ε

   10 stmtsGroup: '(' stmts ')'

   11 stmts: stmts stmt
   12      | stmt

   13 stmt: '\n'
   14     | id '=' expr '\n'
   15     | id '[' indexes ']' '=' expr '\n'
   16     | VAR id '=' BOOL '\n'
   17     | VAR id '[' indexes ']' '=' BOOL '\n'
   18     | VAR id '=' INTEGER '\n'
   19     | VAR id '[' indexes ']' '=' INTEGER '\n'
   20     | FOR id BOUNDARY id STEP id stmtsGroup '\n'
   21     | FOR id BOUNDARY id STEP id stmt '\n'
   22     | SWITCH logic '\n' BOOL stmt '\n'
   23     | SWITCH logic '\n' BOOL stmt '\n' BOOL stmt '\n'
   24     | SWITCH logic '\n' BOOL stmt '\n' BOOL stmtsGroup
   25     | SWITCH logic '\n' BOOL stmtsGroup '\n'
   26     | SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL stmt '\n'
   27     | SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL stmtsGroup '\n'
   28     | ROTATE LEFT '\n'
   29     | ROTATE RIGHT '\n'
   30     | MOVE '\n'
   31     | DO id parameters '\n'
   32     | PLEASE stmt '\n'
   33     | stmt THANKS '\n'
   34     | PRINT expr '\n'
   35     | RESULT id '\n'

   36 parameters: parameters id
   37           | parameters id '[' indexes ']'
   38           | id
   39           | id '[' indexes ']'

   40 expr: arith
   41     | logic

   42 arith: INTEGER
   43      | '(' arith ')'
   44      | id '[' indexes ']'
   45      | REDUCE id '[' INTEGER ']'
   46      | EXTEND id '[' INTEGER ']'
   47      | DIGITIZE id
   48      | SIZE id
   49      | arith '+' arith
   50      | arith '-' arith
   51      | arith '*' arith
   52      | arith '/' arith
   53      | GET ENVIRONMENT
   54      | GET id

   55 logic: '(' logic ')'
   56      | logic AND logic
   57      | BOOL
   58      | id
   59      | id '[' indexes ']'
   60      | NOT logic
   61      | LOGITIZE id
   62      | MXEQ arith
   63      | MXLT arith
   64      | MXGT arith
   65      | MXLTE arith
   66      | MXGTE arith
   67      | ELEQ arith
   68      | ELLT arith
   69      | ELGT arith
   70      | ELLTE arith
   71      | ELGTE arith
   72      | MXFALSE logic
   73      | MXTRUE logic
   74      | REDUCE id '[' INTEGER ']'
   75      | EXTEND id '[' INTEGER ']'


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 4 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
    '(' (40) 10 43 55
    ')' (41) 10 43 55
    '*' (42) 51
    '+' (43) 49
    ',' (44) 7
    '-' (45) 50
    '/' (47) 52
    '=' (61) 14 15 16 17 18 19
    '[' (91) 15 17 19 37 39 44 45 46 59 74 75
    ']' (93) 15 17 19 37 39 44 45 46 59 74 75
    error (256)
    END (258)
    INTEGER <intVal> (259) 18 19 42 45 46 74 75
    BOOL <boolVal> (260) 16 17 22 23 24 25 26 27 57
    id <name> (261) 4 5 6 14 15 16 17 18 19 20 21 31 35 36 37 38 39 44 45 46 47 48 54 58 59 61 74 75
    SWITCH (262) 22 23 24 25 26 27
    FOR (263) 20 21
    PRINT (264) 34
    BOUNDARY (265) 20 21
    STEP (266) 20 21
    MOVE (267) 30
    ROTATE (268) 28 29
    LEFT (269) 28
    RIGHT (270) 29
    GET (271) 53 54
    ENVIRONMENT (272) 53
    TASK (273) 4
    RESULT (274) 35
    DO (275) 31
    PLEASE (276) 32
    VAR (277) 16 17 18 19
    PLSX (278)
    THANKS (279) 33
    SWITCHX (280)
    HIGHSWITCHX (281)
    AND (282) 56
    DIGITIZE (283) 47
    REDUCE (284) 45 74
    EXTEND (285) 46 75
    SIZE (286) 48
    NOT (287) 60
    LOGITIZE (288) 61
    MXEQ (289) 62
    MXLT (290) 63
    MXGT (291) 64
    MXLTE (292) 65
    MXGTE (293) 66
    ELEQ (294) 67
    ELLT (295) 68
    ELGT (296) 69
    ELLTE (297) 70
    ELGTE (298) 71
    MXFALSE (299) 72
    MXTRUE (300) 73


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    program (58)
        on left: 1
        on right: 0
    functions <nPtr> (59)
        on left: 2 3
        on right: 1 2
    function <nPtr> (60)
        on left: 4
        on right: 2
    ids <nPtr> (61)
        on left: 5 6
        on right: 4 5
    indexes <nPtr> (62)
        on left: 7 8 9
        on right: 7 15 17 19 37 39 44 59
    stmtsGroup <nPtr> (63)
        on left: 10
        on right: 4 20 24 25 26 27
    stmts <nPtr> (64)
        on left: 11 12
        on right: 10 11
    stmt <nPtr> (65)
        on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
        on right: 11 12 21 22 23 24 26 32 33
    parameters <nPtr> (66)
        on left: 36 37 38 39
        on right: 31 36 37
    expr <nPtr> (67)
        on left: 40 41
        on right: 7 8 14 15 34
    arith <nPtr> (68)
        on left: 42 43 44 45 46 47 48 49 50 51 52 53 54
        on right: 40 43 49 50 51 52 62 63 64 65 66 67 68 69 70 71
    logic <nPtr> (69)
        on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
        on right: 22 23 24 25 26 27 41 55 56 60 72 73


State 0

    0 $accept: • program $end

    $default  reduce using rule 3 (functions)

    program    go to state 1
    functions  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: functions •
    2 functions: functions • function

    TASK  shift, and go to state 4

    $default  reduce using rule 1 (program)

    function  go to state 5


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 function: TASK • id ids '\n' stmtsGroup

    id  shift, and go to state 6


State 5

    2 functions: functions function •

    $default  reduce using rule 2 (functions)


State 6

    4 function: TASK id • ids '\n' stmtsGroup

    id  shift, and go to state 7

    ids  go to state 8


State 7

    6 ids: id •

    $default  reduce using rule 6 (ids)


State 8

    4 function: TASK id ids • '\n' stmtsGroup
    5 ids: ids • id

    id    shift, and go to state 9
    '\n'  shift, and go to state 10


State 9

    5 ids: ids id •

    $default  reduce using rule 5 (ids)


State 10

    4 function: TASK id ids '\n' • stmtsGroup

    '('  shift, and go to state 11

    stmtsGroup  go to state 12


State 11

   10 stmtsGroup: '(' • stmts ')'

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23

    stmts  go to state 24
    stmt   go to state 25


State 12

    4 function: TASK id ids '\n' stmtsGroup •

    $default  reduce using rule 4 (function)


State 13

   14 stmt: id • '=' expr '\n'
   15     | id • '[' indexes ']' '=' expr '\n'

    '='  shift, and go to state 26
    '['  shift, and go to state 27


State 14

   22 stmt: SWITCH • logic '\n' BOOL stmt '\n'
   23     | SWITCH • logic '\n' BOOL stmt '\n' BOOL stmt '\n'
   24     | SWITCH • logic '\n' BOOL stmt '\n' BOOL stmtsGroup
   25     | SWITCH • logic '\n' BOOL stmtsGroup '\n'
   26     | SWITCH • logic '\n' BOOL stmtsGroup '\n' BOOL stmt '\n'
   27     | SWITCH • logic '\n' BOOL stmtsGroup '\n' BOOL stmtsGroup '\n'

    BOOL      shift, and go to state 28
    id        shift, and go to state 29
    REDUCE    shift, and go to state 30
    EXTEND    shift, and go to state 31
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 46

    logic  go to state 47


State 15

   20 stmt: FOR • id BOUNDARY id STEP id stmtsGroup '\n'
   21     | FOR • id BOUNDARY id STEP id stmt '\n'

    id  shift, and go to state 48


State 16

   34 stmt: PRINT • expr '\n'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    expr   go to state 57
    arith  go to state 58
    logic  go to state 59


State 17

   30 stmt: MOVE • '\n'

    '\n'  shift, and go to state 60


State 18

   28 stmt: ROTATE • LEFT '\n'
   29     | ROTATE • RIGHT '\n'

    LEFT   shift, and go to state 61
    RIGHT  shift, and go to state 62


State 19

   35 stmt: RESULT • id '\n'

    id  shift, and go to state 63


State 20

   31 stmt: DO • id parameters '\n'

    id  shift, and go to state 64


State 21

   32 stmt: PLEASE • stmt '\n'

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23

    stmt  go to state 65


State 22

   16 stmt: VAR • id '=' BOOL '\n'
   17     | VAR • id '[' indexes ']' '=' BOOL '\n'
   18     | VAR • id '=' INTEGER '\n'
   19     | VAR • id '[' indexes ']' '=' INTEGER '\n'

    id  shift, and go to state 66


State 23

   13 stmt: '\n' •

    $default  reduce using rule 13 (stmt)


State 24

   10 stmtsGroup: '(' stmts • ')'
   11 stmts: stmts • stmt

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23
    ')'     shift, and go to state 67

    stmt  go to state 68


State 25

   12 stmts: stmt •
   33 stmt: stmt • THANKS '\n'

    THANKS  shift, and go to state 69

    $default  reduce using rule 12 (stmts)


State 26

   14 stmt: id '=' • expr '\n'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    expr   go to state 70
    arith  go to state 58
    logic  go to state 59


State 27

   15 stmt: id '[' • indexes ']' '=' expr '\n'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    $default  reduce using rule 9 (indexes)

    indexes  go to state 71
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 28

   57 logic: BOOL •

    $default  reduce using rule 57 (logic)


State 29

   58 logic: id •
   59      | id • '[' indexes ']'

    '['  shift, and go to state 73

    $default  reduce using rule 58 (logic)


State 30

   74 logic: REDUCE • id '[' INTEGER ']'

    id  shift, and go to state 74


State 31

   75 logic: EXTEND • id '[' INTEGER ']'

    id  shift, and go to state 75


State 32

   60 logic: NOT • logic

    BOOL      shift, and go to state 28
    id        shift, and go to state 29
    REDUCE    shift, and go to state 30
    EXTEND    shift, and go to state 31
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 46

    logic  go to state 76


State 33

   61 logic: LOGITIZE • id

    id  shift, and go to state 77


State 34

   62 logic: MXEQ • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 82


State 35

   63 logic: MXLT • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 83


State 36

   64 logic: MXGT • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 84


State 37

   65 logic: MXLTE • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 85


State 38

   66 logic: MXGTE • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 86


State 39

   67 logic: ELEQ • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 87


State 40

   68 logic: ELLT • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 88


State 41

   69 logic: ELGT • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 89


State 42

   70 logic: ELLTE • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 90


State 43

   71 logic: ELGTE • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 91


State 44

   72 logic: MXFALSE • logic

    BOOL      shift, and go to state 28
    id        shift, and go to state 29
    REDUCE    shift, and go to state 30
    EXTEND    shift, and go to state 31
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 46

    logic  go to state 92


State 45

   73 logic: MXTRUE • logic

    BOOL      shift, and go to state 28
    id        shift, and go to state 29
    REDUCE    shift, and go to state 30
    EXTEND    shift, and go to state 31
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 46

    logic  go to state 93


State 46

   55 logic: '(' • logic ')'

    BOOL      shift, and go to state 28
    id        shift, and go to state 29
    REDUCE    shift, and go to state 30
    EXTEND    shift, and go to state 31
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 46

    logic  go to state 94


State 47

   22 stmt: SWITCH logic • '\n' BOOL stmt '\n'
   23     | SWITCH logic • '\n' BOOL stmt '\n' BOOL stmt '\n'
   24     | SWITCH logic • '\n' BOOL stmt '\n' BOOL stmtsGroup
   25     | SWITCH logic • '\n' BOOL stmtsGroup '\n'
   26     | SWITCH logic • '\n' BOOL stmtsGroup '\n' BOOL stmt '\n'
   27     | SWITCH logic • '\n' BOOL stmtsGroup '\n' BOOL stmtsGroup '\n'
   56 logic: logic • AND logic

    AND   shift, and go to state 95
    '\n'  shift, and go to state 96


State 48

   20 stmt: FOR id • BOUNDARY id STEP id stmtsGroup '\n'
   21     | FOR id • BOUNDARY id STEP id stmt '\n'

    BOUNDARY  shift, and go to state 97


State 49

   42 arith: INTEGER •

    $default  reduce using rule 42 (arith)


State 50

   44 arith: id • '[' indexes ']'
   58 logic: id •
   59      | id • '[' indexes ']'

    '['  shift, and go to state 98

    $default  reduce using rule 58 (logic)


State 51

   53 arith: GET • ENVIRONMENT
   54      | GET • id

    id           shift, and go to state 99
    ENVIRONMENT  shift, and go to state 100


State 52

   47 arith: DIGITIZE • id

    id  shift, and go to state 101


State 53

   45 arith: REDUCE • id '[' INTEGER ']'
   74 logic: REDUCE • id '[' INTEGER ']'

    id  shift, and go to state 102


State 54

   46 arith: EXTEND • id '[' INTEGER ']'
   75 logic: EXTEND • id '[' INTEGER ']'

    id  shift, and go to state 103


State 55

   48 arith: SIZE • id

    id  shift, and go to state 104


State 56

   43 arith: '(' • arith ')'
   55 logic: '(' • logic ')'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    arith  go to state 105
    logic  go to state 94


State 57

   34 stmt: PRINT expr • '\n'

    '\n'  shift, and go to state 106


State 58

   40 expr: arith •
   49 arith: arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 40 (expr)


State 59

   41 expr: logic •
   56 logic: logic • AND logic

    AND  shift, and go to state 95

    $default  reduce using rule 41 (expr)


State 60

   30 stmt: MOVE '\n' •

    $default  reduce using rule 30 (stmt)


State 61

   28 stmt: ROTATE LEFT • '\n'

    '\n'  shift, and go to state 111


State 62

   29 stmt: ROTATE RIGHT • '\n'

    '\n'  shift, and go to state 112


State 63

   35 stmt: RESULT id • '\n'

    '\n'  shift, and go to state 113


State 64

   31 stmt: DO id • parameters '\n'

    id  shift, and go to state 114

    parameters  go to state 115


State 65

   32 stmt: PLEASE stmt • '\n'
   33     | stmt • THANKS '\n'

    THANKS  shift, and go to state 69
    '\n'    shift, and go to state 116


State 66

   16 stmt: VAR id • '=' BOOL '\n'
   17     | VAR id • '[' indexes ']' '=' BOOL '\n'
   18     | VAR id • '=' INTEGER '\n'
   19     | VAR id • '[' indexes ']' '=' INTEGER '\n'

    '='  shift, and go to state 117
    '['  shift, and go to state 118


State 67

   10 stmtsGroup: '(' stmts ')' •

    $default  reduce using rule 10 (stmtsGroup)


State 68

   11 stmts: stmts stmt •
   33 stmt: stmt • THANKS '\n'

    THANKS  shift, and go to state 69

    $default  reduce using rule 11 (stmts)


State 69

   33 stmt: stmt THANKS • '\n'

    '\n'  shift, and go to state 119


State 70

   14 stmt: id '=' expr • '\n'

    '\n'  shift, and go to state 120


State 71

    7 indexes: indexes • ',' expr
   15 stmt: id '[' indexes • ']' '=' expr '\n'

    ','  shift, and go to state 121
    ']'  shift, and go to state 122


State 72

    8 indexes: expr •

    $default  reduce using rule 8 (indexes)


State 73

   59 logic: id '[' • indexes ']'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    $default  reduce using rule 9 (indexes)

    indexes  go to state 123
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 74

   74 logic: REDUCE id • '[' INTEGER ']'

    '['  shift, and go to state 124


State 75

   75 logic: EXTEND id • '[' INTEGER ']'

    '['  shift, and go to state 125


State 76

   56 logic: logic • AND logic
   60      | NOT logic •

    $default  reduce using rule 60 (logic)


State 77

   61 logic: LOGITIZE id •

    $default  reduce using rule 61 (logic)


State 78

   44 arith: id • '[' indexes ']'

    '['  shift, and go to state 126


State 79

   45 arith: REDUCE • id '[' INTEGER ']'

    id  shift, and go to state 127


State 80

   46 arith: EXTEND • id '[' INTEGER ']'

    id  shift, and go to state 128


State 81

   43 arith: '(' • arith ')'

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 105


State 82

   49 arith: arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith
   62 logic: MXEQ arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 62 (logic)


State 83

   49 arith: arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith
   63 logic: MXLT arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 63 (logic)


State 84

   49 arith: arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith
   64 logic: MXGT arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 64 (logic)


State 85

   49 arith: arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith
   65 logic: MXLTE arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 65 (logic)


State 86

   49 arith: arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith
   66 logic: MXGTE arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 66 (logic)


State 87

   49 arith: arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith
   67 logic: ELEQ arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 67 (logic)


State 88

   49 arith: arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith
   68 logic: ELLT arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 68 (logic)


State 89

   49 arith: arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith
   69 logic: ELGT arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 69 (logic)


State 90

   49 arith: arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith
   70 logic: ELLTE arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 70 (logic)


State 91

   49 arith: arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith
   71 logic: ELGTE arith •

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 71 (logic)


State 92

   56 logic: logic • AND logic
   72      | MXFALSE logic •

    $default  reduce using rule 72 (logic)


State 93

   56 logic: logic • AND logic
   73      | MXTRUE logic •

    $default  reduce using rule 73 (logic)


State 94

   55 logic: '(' logic • ')'
   56      | logic • AND logic

    AND  shift, and go to state 95
    ')'  shift, and go to state 129


State 95

   56 logic: logic AND • logic

    BOOL      shift, and go to state 28
    id        shift, and go to state 29
    REDUCE    shift, and go to state 30
    EXTEND    shift, and go to state 31
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 46

    logic  go to state 130


State 96

   22 stmt: SWITCH logic '\n' • BOOL stmt '\n'
   23     | SWITCH logic '\n' • BOOL stmt '\n' BOOL stmt '\n'
   24     | SWITCH logic '\n' • BOOL stmt '\n' BOOL stmtsGroup
   25     | SWITCH logic '\n' • BOOL stmtsGroup '\n'
   26     | SWITCH logic '\n' • BOOL stmtsGroup '\n' BOOL stmt '\n'
   27     | SWITCH logic '\n' • BOOL stmtsGroup '\n' BOOL stmtsGroup '\n'

    BOOL  shift, and go to state 131


State 97

   20 stmt: FOR id BOUNDARY • id STEP id stmtsGroup '\n'
   21     | FOR id BOUNDARY • id STEP id stmt '\n'

    id  shift, and go to state 132


State 98

   44 arith: id '[' • indexes ']'
   59 logic: id '[' • indexes ']'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    $default  reduce using rule 9 (indexes)

    indexes  go to state 133
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 99

   54 arith: GET id •

    $default  reduce using rule 54 (arith)


State 100

   53 arith: GET ENVIRONMENT •

    $default  reduce using rule 53 (arith)


State 101

   47 arith: DIGITIZE id •

    $default  reduce using rule 47 (arith)


State 102

   45 arith: REDUCE id • '[' INTEGER ']'
   74 logic: REDUCE id • '[' INTEGER ']'

    '['  shift, and go to state 134


State 103

   46 arith: EXTEND id • '[' INTEGER ']'
   75 logic: EXTEND id • '[' INTEGER ']'

    '['  shift, and go to state 135


State 104

   48 arith: SIZE id •

    $default  reduce using rule 48 (arith)


State 105

   43 arith: '(' arith • ')'
   49      | arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    ')'  shift, and go to state 136


State 106

   34 stmt: PRINT expr '\n' •

    $default  reduce using rule 34 (stmt)


State 107

   49 arith: arith '+' • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 137


State 108

   50 arith: arith '-' • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 138


State 109

   51 arith: arith '*' • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 139


State 110

   52 arith: arith '/' • arith

    INTEGER   shift, and go to state 49
    id        shift, and go to state 78
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 79
    EXTEND    shift, and go to state 80
    SIZE      shift, and go to state 55
    '('       shift, and go to state 81

    arith  go to state 140


State 111

   28 stmt: ROTATE LEFT '\n' •

    $default  reduce using rule 28 (stmt)


State 112

   29 stmt: ROTATE RIGHT '\n' •

    $default  reduce using rule 29 (stmt)


State 113

   35 stmt: RESULT id '\n' •

    $default  reduce using rule 35 (stmt)


State 114

   38 parameters: id •
   39           | id • '[' indexes ']'

    '['  shift, and go to state 141

    $default  reduce using rule 38 (parameters)


State 115

   31 stmt: DO id parameters • '\n'
   36 parameters: parameters • id
   37           | parameters • id '[' indexes ']'

    id    shift, and go to state 142
    '\n'  shift, and go to state 143


State 116

   32 stmt: PLEASE stmt '\n' •

    $default  reduce using rule 32 (stmt)


State 117

   16 stmt: VAR id '=' • BOOL '\n'
   18     | VAR id '=' • INTEGER '\n'

    INTEGER  shift, and go to state 144
    BOOL     shift, and go to state 145


State 118

   17 stmt: VAR id '[' • indexes ']' '=' BOOL '\n'
   19     | VAR id '[' • indexes ']' '=' INTEGER '\n'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    $default  reduce using rule 9 (indexes)

    indexes  go to state 146
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 119

   33 stmt: stmt THANKS '\n' •

    $default  reduce using rule 33 (stmt)


State 120

   14 stmt: id '=' expr '\n' •

    $default  reduce using rule 14 (stmt)


State 121

    7 indexes: indexes ',' • expr

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    expr   go to state 147
    arith  go to state 58
    logic  go to state 59


State 122

   15 stmt: id '[' indexes ']' • '=' expr '\n'

    '='  shift, and go to state 148


State 123

    7 indexes: indexes • ',' expr
   59 logic: id '[' indexes • ']'

    ','  shift, and go to state 121
    ']'  shift, and go to state 149


State 124

   74 logic: REDUCE id '[' • INTEGER ']'

    INTEGER  shift, and go to state 150


State 125

   75 logic: EXTEND id '[' • INTEGER ']'

    INTEGER  shift, and go to state 151


State 126

   44 arith: id '[' • indexes ']'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    $default  reduce using rule 9 (indexes)

    indexes  go to state 152
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 127

   45 arith: REDUCE id • '[' INTEGER ']'

    '['  shift, and go to state 153


State 128

   46 arith: EXTEND id • '[' INTEGER ']'

    '['  shift, and go to state 154


State 129

   55 logic: '(' logic ')' •

    $default  reduce using rule 55 (logic)


State 130

   56 logic: logic • AND logic
   56      | logic AND logic •

    $default  reduce using rule 56 (logic)


State 131

   22 stmt: SWITCH logic '\n' BOOL • stmt '\n'
   23     | SWITCH logic '\n' BOOL • stmt '\n' BOOL stmt '\n'
   24     | SWITCH logic '\n' BOOL • stmt '\n' BOOL stmtsGroup
   25     | SWITCH logic '\n' BOOL • stmtsGroup '\n'
   26     | SWITCH logic '\n' BOOL • stmtsGroup '\n' BOOL stmt '\n'
   27     | SWITCH logic '\n' BOOL • stmtsGroup '\n' BOOL stmtsGroup '\n'

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23
    '('     shift, and go to state 11

    stmtsGroup  go to state 155
    stmt        go to state 156


State 132

   20 stmt: FOR id BOUNDARY id • STEP id stmtsGroup '\n'
   21     | FOR id BOUNDARY id • STEP id stmt '\n'

    STEP  shift, and go to state 157


State 133

    7 indexes: indexes • ',' expr
   44 arith: id '[' indexes • ']'
   59 logic: id '[' indexes • ']'

    ','  shift, and go to state 121
    ']'  shift, and go to state 158


State 134

   45 arith: REDUCE id '[' • INTEGER ']'
   74 logic: REDUCE id '[' • INTEGER ']'

    INTEGER  shift, and go to state 159


State 135

   46 arith: EXTEND id '[' • INTEGER ']'
   75 logic: EXTEND id '[' • INTEGER ']'

    INTEGER  shift, and go to state 160


State 136

   43 arith: '(' arith ')' •

    $default  reduce using rule 43 (arith)


State 137

   49 arith: arith • '+' arith
   49      | arith '+' arith •
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith

    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 49 (arith)


State 138

   49 arith: arith • '+' arith
   50      | arith • '-' arith
   50      | arith '-' arith •
   51      | arith • '*' arith
   52      | arith • '/' arith

    '*'  shift, and go to state 109
    '/'  shift, and go to state 110

    $default  reduce using rule 50 (arith)


State 139

   49 arith: arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   51      | arith '*' arith •
   52      | arith • '/' arith

    $default  reduce using rule 51 (arith)


State 140

   49 arith: arith • '+' arith
   50      | arith • '-' arith
   51      | arith • '*' arith
   52      | arith • '/' arith
   52      | arith '/' arith •

    $default  reduce using rule 52 (arith)


State 141

   39 parameters: id '[' • indexes ']'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    $default  reduce using rule 9 (indexes)

    indexes  go to state 161
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 142

   36 parameters: parameters id •
   37           | parameters id • '[' indexes ']'

    '['  shift, and go to state 162

    $default  reduce using rule 36 (parameters)


State 143

   31 stmt: DO id parameters '\n' •

    $default  reduce using rule 31 (stmt)


State 144

   18 stmt: VAR id '=' INTEGER • '\n'

    '\n'  shift, and go to state 163


State 145

   16 stmt: VAR id '=' BOOL • '\n'

    '\n'  shift, and go to state 164


State 146

    7 indexes: indexes • ',' expr
   17 stmt: VAR id '[' indexes • ']' '=' BOOL '\n'
   19     | VAR id '[' indexes • ']' '=' INTEGER '\n'

    ','  shift, and go to state 121
    ']'  shift, and go to state 165


State 147

    7 indexes: indexes ',' expr •

    $default  reduce using rule 7 (indexes)


State 148

   15 stmt: id '[' indexes ']' '=' • expr '\n'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    expr   go to state 166
    arith  go to state 58
    logic  go to state 59


State 149

   59 logic: id '[' indexes ']' •

    $default  reduce using rule 59 (logic)


State 150

   74 logic: REDUCE id '[' INTEGER • ']'

    ']'  shift, and go to state 167


State 151

   75 logic: EXTEND id '[' INTEGER • ']'

    ']'  shift, and go to state 168


State 152

    7 indexes: indexes • ',' expr
   44 arith: id '[' indexes • ']'

    ','  shift, and go to state 121
    ']'  shift, and go to state 169


State 153

   45 arith: REDUCE id '[' • INTEGER ']'

    INTEGER  shift, and go to state 170


State 154

   46 arith: EXTEND id '[' • INTEGER ']'

    INTEGER  shift, and go to state 171


State 155

   25 stmt: SWITCH logic '\n' BOOL stmtsGroup • '\n'
   26     | SWITCH logic '\n' BOOL stmtsGroup • '\n' BOOL stmt '\n'
   27     | SWITCH logic '\n' BOOL stmtsGroup • '\n' BOOL stmtsGroup '\n'

    '\n'  shift, and go to state 172


State 156

   22 stmt: SWITCH logic '\n' BOOL stmt • '\n'
   23     | SWITCH logic '\n' BOOL stmt • '\n' BOOL stmt '\n'
   24     | SWITCH logic '\n' BOOL stmt • '\n' BOOL stmtsGroup
   33     | stmt • THANKS '\n'

    THANKS  shift, and go to state 69
    '\n'    shift, and go to state 173


State 157

   20 stmt: FOR id BOUNDARY id STEP • id stmtsGroup '\n'
   21     | FOR id BOUNDARY id STEP • id stmt '\n'

    id  shift, and go to state 174


State 158

   44 arith: id '[' indexes ']' •
   59 logic: id '[' indexes ']' •

    AND       reduce using rule 59 (logic)
    '\n'      reduce using rule 44 (arith)
    '\n'      [reduce using rule 59 (logic)]
    ','       reduce using rule 44 (arith)
    ','       [reduce using rule 59 (logic)]
    ')'       reduce using rule 44 (arith)
    ')'       [reduce using rule 59 (logic)]
    ']'       reduce using rule 44 (arith)
    ']'       [reduce using rule 59 (logic)]
    $default  reduce using rule 44 (arith)


State 159

   45 arith: REDUCE id '[' INTEGER • ']'
   74 logic: REDUCE id '[' INTEGER • ']'

    ']'  shift, and go to state 175


State 160

   46 arith: EXTEND id '[' INTEGER • ']'
   75 logic: EXTEND id '[' INTEGER • ']'

    ']'  shift, and go to state 176


State 161

    7 indexes: indexes • ',' expr
   39 parameters: id '[' indexes • ']'

    ','  shift, and go to state 121
    ']'  shift, and go to state 177


State 162

   37 parameters: parameters id '[' • indexes ']'

    INTEGER   shift, and go to state 49
    BOOL      shift, and go to state 28
    id        shift, and go to state 50
    GET       shift, and go to state 51
    DIGITIZE  shift, and go to state 52
    REDUCE    shift, and go to state 53
    EXTEND    shift, and go to state 54
    SIZE      shift, and go to state 55
    NOT       shift, and go to state 32
    LOGITIZE  shift, and go to state 33
    MXEQ      shift, and go to state 34
    MXLT      shift, and go to state 35
    MXGT      shift, and go to state 36
    MXLTE     shift, and go to state 37
    MXGTE     shift, and go to state 38
    ELEQ      shift, and go to state 39
    ELLT      shift, and go to state 40
    ELGT      shift, and go to state 41
    ELLTE     shift, and go to state 42
    ELGTE     shift, and go to state 43
    MXFALSE   shift, and go to state 44
    MXTRUE    shift, and go to state 45
    '('       shift, and go to state 56

    $default  reduce using rule 9 (indexes)

    indexes  go to state 178
    expr     go to state 72
    arith    go to state 58
    logic    go to state 59


State 163

   18 stmt: VAR id '=' INTEGER '\n' •

    $default  reduce using rule 18 (stmt)


State 164

   16 stmt: VAR id '=' BOOL '\n' •

    $default  reduce using rule 16 (stmt)


State 165

   17 stmt: VAR id '[' indexes ']' • '=' BOOL '\n'
   19     | VAR id '[' indexes ']' • '=' INTEGER '\n'

    '='  shift, and go to state 179


State 166

   15 stmt: id '[' indexes ']' '=' expr • '\n'

    '\n'  shift, and go to state 180


State 167

   74 logic: REDUCE id '[' INTEGER ']' •

    $default  reduce using rule 74 (logic)


State 168

   75 logic: EXTEND id '[' INTEGER ']' •

    $default  reduce using rule 75 (logic)


State 169

   44 arith: id '[' indexes ']' •

    $default  reduce using rule 44 (arith)


State 170

   45 arith: REDUCE id '[' INTEGER • ']'

    ']'  shift, and go to state 181


State 171

   46 arith: EXTEND id '[' INTEGER • ']'

    ']'  shift, and go to state 182


State 172

   25 stmt: SWITCH logic '\n' BOOL stmtsGroup '\n' •
   26     | SWITCH logic '\n' BOOL stmtsGroup '\n' • BOOL stmt '\n'
   27     | SWITCH logic '\n' BOOL stmtsGroup '\n' • BOOL stmtsGroup '\n'

    BOOL  shift, and go to state 183

    $default  reduce using rule 25 (stmt)


State 173

   22 stmt: SWITCH logic '\n' BOOL stmt '\n' •
   23     | SWITCH logic '\n' BOOL stmt '\n' • BOOL stmt '\n'
   24     | SWITCH logic '\n' BOOL stmt '\n' • BOOL stmtsGroup

    BOOL  shift, and go to state 184

    $default  reduce using rule 22 (stmt)


State 174

   20 stmt: FOR id BOUNDARY id STEP id • stmtsGroup '\n'
   21     | FOR id BOUNDARY id STEP id • stmt '\n'

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23
    '('     shift, and go to state 11

    stmtsGroup  go to state 185
    stmt        go to state 186


State 175

   45 arith: REDUCE id '[' INTEGER ']' •
   74 logic: REDUCE id '[' INTEGER ']' •

    AND       reduce using rule 74 (logic)
    '\n'      reduce using rule 45 (arith)
    '\n'      [reduce using rule 74 (logic)]
    ','       reduce using rule 45 (arith)
    ','       [reduce using rule 74 (logic)]
    ')'       reduce using rule 45 (arith)
    ')'       [reduce using rule 74 (logic)]
    ']'       reduce using rule 45 (arith)
    ']'       [reduce using rule 74 (logic)]
    $default  reduce using rule 45 (arith)


State 176

   46 arith: EXTEND id '[' INTEGER ']' •
   75 logic: EXTEND id '[' INTEGER ']' •

    AND       reduce using rule 75 (logic)
    '\n'      reduce using rule 46 (arith)
    '\n'      [reduce using rule 75 (logic)]
    ','       reduce using rule 46 (arith)
    ','       [reduce using rule 75 (logic)]
    ')'       reduce using rule 46 (arith)
    ')'       [reduce using rule 75 (logic)]
    ']'       reduce using rule 46 (arith)
    ']'       [reduce using rule 75 (logic)]
    $default  reduce using rule 46 (arith)


State 177

   39 parameters: id '[' indexes ']' •

    $default  reduce using rule 39 (parameters)


State 178

    7 indexes: indexes • ',' expr
   37 parameters: parameters id '[' indexes • ']'

    ','  shift, and go to state 121
    ']'  shift, and go to state 187


State 179

   17 stmt: VAR id '[' indexes ']' '=' • BOOL '\n'
   19     | VAR id '[' indexes ']' '=' • INTEGER '\n'

    INTEGER  shift, and go to state 188
    BOOL     shift, and go to state 189


State 180

   15 stmt: id '[' indexes ']' '=' expr '\n' •

    $default  reduce using rule 15 (stmt)


State 181

   45 arith: REDUCE id '[' INTEGER ']' •

    $default  reduce using rule 45 (arith)


State 182

   46 arith: EXTEND id '[' INTEGER ']' •

    $default  reduce using rule 46 (arith)


State 183

   26 stmt: SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL • stmt '\n'
   27     | SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL • stmtsGroup '\n'

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23
    '('     shift, and go to state 11

    stmtsGroup  go to state 190
    stmt        go to state 191


State 184

   23 stmt: SWITCH logic '\n' BOOL stmt '\n' BOOL • stmt '\n'
   24     | SWITCH logic '\n' BOOL stmt '\n' BOOL • stmtsGroup

    id      shift, and go to state 13
    SWITCH  shift, and go to state 14
    FOR     shift, and go to state 15
    PRINT   shift, and go to state 16
    MOVE    shift, and go to state 17
    ROTATE  shift, and go to state 18
    RESULT  shift, and go to state 19
    DO      shift, and go to state 20
    PLEASE  shift, and go to state 21
    VAR     shift, and go to state 22
    '\n'    shift, and go to state 23
    '('     shift, and go to state 11

    stmtsGroup  go to state 192
    stmt        go to state 193


State 185

   20 stmt: FOR id BOUNDARY id STEP id stmtsGroup • '\n'

    '\n'  shift, and go to state 194


State 186

   21 stmt: FOR id BOUNDARY id STEP id stmt • '\n'
   33     | stmt • THANKS '\n'

    THANKS  shift, and go to state 69
    '\n'    shift, and go to state 195


State 187

   37 parameters: parameters id '[' indexes ']' •

    $default  reduce using rule 37 (parameters)


State 188

   19 stmt: VAR id '[' indexes ']' '=' INTEGER • '\n'

    '\n'  shift, and go to state 196


State 189

   17 stmt: VAR id '[' indexes ']' '=' BOOL • '\n'

    '\n'  shift, and go to state 197


State 190

   27 stmt: SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL stmtsGroup • '\n'

    '\n'  shift, and go to state 198


State 191

   26 stmt: SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL stmt • '\n'
   33     | stmt • THANKS '\n'

    THANKS  shift, and go to state 69
    '\n'    shift, and go to state 199


State 192

   24 stmt: SWITCH logic '\n' BOOL stmt '\n' BOOL stmtsGroup •

    $default  reduce using rule 24 (stmt)


State 193

   23 stmt: SWITCH logic '\n' BOOL stmt '\n' BOOL stmt • '\n'
   33     | stmt • THANKS '\n'

    THANKS  shift, and go to state 69
    '\n'    shift, and go to state 200


State 194

   20 stmt: FOR id BOUNDARY id STEP id stmtsGroup '\n' •

    $default  reduce using rule 20 (stmt)


State 195

   21 stmt: FOR id BOUNDARY id STEP id stmt '\n' •

    $default  reduce using rule 21 (stmt)


State 196

   19 stmt: VAR id '[' indexes ']' '=' INTEGER '\n' •

    $default  reduce using rule 19 (stmt)


State 197

   17 stmt: VAR id '[' indexes ']' '=' BOOL '\n' •

    $default  reduce using rule 17 (stmt)


State 198

   27 stmt: SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL stmtsGroup '\n' •

    $default  reduce using rule 27 (stmt)


State 199

   26 stmt: SWITCH logic '\n' BOOL stmtsGroup '\n' BOOL stmt '\n' •

    $default  reduce using rule 26 (stmt)


State 200

   23 stmt: SWITCH logic '\n' BOOL stmt '\n' BOOL stmt '\n' •

    $default  reduce using rule 23 (stmt)
